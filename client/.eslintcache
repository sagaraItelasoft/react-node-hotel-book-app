[{"/Users/kaloraat/udemy/booking/client/src/index.js":"1","/Users/kaloraat/udemy/booking/client/src/App.js":"2","/Users/kaloraat/udemy/booking/client/src/reportWebVitals.js":"3","/Users/kaloraat/udemy/booking/client/src/auth/Login.js":"4","/Users/kaloraat/udemy/booking/client/src/auth/Register.js":"5","/Users/kaloraat/udemy/booking/client/src/booking/Home.js":"6","/Users/kaloraat/udemy/booking/client/src/components/TopNav.js":"7","/Users/kaloraat/udemy/booking/client/src/reducers/index.js":"8","/Users/kaloraat/udemy/booking/client/src/reducers/auth.js":"9","/Users/kaloraat/udemy/booking/client/src/components/RegisterForm.js":"10","/Users/kaloraat/udemy/booking/client/src/actions/auth.js":"11","/Users/kaloraat/udemy/booking/client/src/components/LoginForm.js":"12","/Users/kaloraat/udemy/booking/client/src/user/Dashboard.js":"13","/Users/kaloraat/udemy/booking/client/src/components/PrivateRoute.js":"14","/Users/kaloraat/udemy/booking/client/src/components/DashboardNav.js":"15","/Users/kaloraat/udemy/booking/client/src/user/DashboardSeller.js":"16","/Users/kaloraat/udemy/booking/client/src/components/ConnectNav.js":"17","/Users/kaloraat/udemy/booking/client/src/hotels/NewHotel.js":"18","/Users/kaloraat/udemy/booking/client/src/actions/stripe.js":"19","/Users/kaloraat/udemy/booking/client/src/stripe/StripeCallback.js":"20","/Users/kaloraat/udemy/booking/client/src/actions/hotel.js":"21","/Users/kaloraat/udemy/booking/client/src/components/forms/HotelCreateForm.js":"22","/Users/kaloraat/udemy/booking/client/src/components/cards/SmallCard.js":"23","/Users/kaloraat/udemy/booking/client/src/hotels/EditHotel.js":"24","/Users/kaloraat/udemy/booking/client/src/components/forms/HotelEditForm.js":"25","/Users/kaloraat/udemy/booking/client/src/hotels/ViewHotel.js":"26","/Users/kaloraat/udemy/booking/client/src/stripe/StripeSuccess.js":"27","/Users/kaloraat/udemy/booking/client/src/stripe/StripeCancel.js":"28"},{"size":997,"mtime":1609665780933,"results":"29","hashOfConfig":"30"},{"size":2133,"mtime":1611568282330,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":1609414014062,"results":"32","hashOfConfig":"30"},{"size":1689,"mtime":1609640297415,"results":"33","hashOfConfig":"30"},{"size":1396,"mtime":1609583146463,"results":"34","hashOfConfig":"30"},{"size":745,"mtime":1610846228333,"results":"35","hashOfConfig":"30"},{"size":1145,"mtime":1610154416296,"results":"36","hashOfConfig":"30"},{"size":172,"mtime":1609622199918,"results":"37","hashOfConfig":"30"},{"size":406,"mtime":1609622687212,"results":"38","hashOfConfig":"30"},{"size":1188,"mtime":1609584307496,"results":"39","hashOfConfig":"30"},{"size":527,"mtime":1610365404539,"results":"40","hashOfConfig":"30"},{"size":871,"mtime":1609584266261,"results":"41","hashOfConfig":"30"},{"size":756,"mtime":1609669882207,"results":"42","hashOfConfig":"30"},{"size":307,"mtime":1609640252267,"results":"43","hashOfConfig":"30"},{"size":659,"mtime":1609641922225,"results":"44","hashOfConfig":"30"},{"size":3464,"mtime":1610876865743,"results":"45","hashOfConfig":"30"},{"size":2251,"mtime":1610368493669,"results":"46","hashOfConfig":"30"},{"size":2912,"mtime":1610711038900,"results":"47","hashOfConfig":"30"},{"size":1536,"mtime":1611568384060,"results":"48","hashOfConfig":"30"},{"size":1197,"mtime":1610272380043,"results":"49","hashOfConfig":"30"},{"size":1261,"mtime":1611225197633,"results":"50","hashOfConfig":"30"},{"size":2840,"mtime":1610710091476,"results":"51","hashOfConfig":"30"},{"size":2885,"mtime":1611431655271,"results":"52","hashOfConfig":"30"},{"size":2959,"mtime":1611226115955,"results":"53","hashOfConfig":"30"},{"size":3167,"mtime":1611052955606,"results":"54","hashOfConfig":"30"},{"size":2925,"mtime":1611401164283,"results":"55","hashOfConfig":"30"},{"size":981,"mtime":1611568808655,"results":"56","hashOfConfig":"30"},{"size":262,"mtime":1611432674424,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"wz8fvr",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"60"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"/Users/kaloraat/udemy/booking/client/src/index.js",[],["124","125"],"/Users/kaloraat/udemy/booking/client/src/App.js",[],"/Users/kaloraat/udemy/booking/client/src/reportWebVitals.js",[],"/Users/kaloraat/udemy/booking/client/src/auth/Login.js",[],"/Users/kaloraat/udemy/booking/client/src/auth/Register.js",["126"],"import { useState } from \"react\";\nimport RegisterForm from \"../components/RegisterForm\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { register } from \"../actions/auth\";\n\nconst Register = ({ history }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const res = await register({\n        name,\n        email,\n        password,\n      });\n      console.log(\"REGISTER USER ===> \", res);\n      toast.success(\"Register success. Please login.\");\n      history.push(\"/login\");\n    } catch (err) {\n      console.log(err);\n      if (err.response.status === 400) toast.error(err.response.data);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"container-fluid bg-secondary p-5 text-center\">\n        <h1>Register</h1>\n      </div>\n\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-6 offset-md-3\">\n            <RegisterForm\n              handleSubmit={handleSubmit}\n              name={name}\n              setName={setName}\n              email={email}\n              setEmail={setEmail}\n              password={password}\n              setPassword={setPassword}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Register;\n","/Users/kaloraat/udemy/booking/client/src/booking/Home.js",[],"/Users/kaloraat/udemy/booking/client/src/components/TopNav.js",["127"],"import { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nconst TopNav = () => {\n  const dispatch = useDispatch();\n  const { auth } = useSelector((state) => ({ ...state }));\n  const history = useHistory();\n\n  const logout = () => {\n    dispatch({\n      type: \"LOGOUT\",\n      payload: null,\n    });\n    window.localStorage.removeItem(\"auth\");\n    history.push(\"/login\");\n  };\n\n  return (\n    <div className=\"nav bg-light d-flex justify-content-between\">\n      <Link className=\"nav-link\" to=\"/\">\n        Home\n      </Link>\n\n      {auth !== null && (\n        <Link className=\"nav-link\" to=\"/dashboard\">\n          Dashboard\n        </Link>\n      )}\n\n      {auth !== null && (\n        <a className=\"nav-link pointer\" href=\"#\" onClick={logout}>\n          Logout\n        </a>\n      )}\n\n      {auth === null && (\n        <>\n          <Link className=\"nav-link\" to=\"/login\">\n            Login\n          </Link>\n          <Link className=\"nav-link\" to=\"/register\">\n            Register\n          </Link>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default TopNav;\n","/Users/kaloraat/udemy/booking/client/src/reducers/index.js",[],"/Users/kaloraat/udemy/booking/client/src/reducers/auth.js",[],"/Users/kaloraat/udemy/booking/client/src/components/RegisterForm.js",[],"/Users/kaloraat/udemy/booking/client/src/actions/auth.js",[],"/Users/kaloraat/udemy/booking/client/src/components/LoginForm.js",[],"/Users/kaloraat/udemy/booking/client/src/user/Dashboard.js",[],"/Users/kaloraat/udemy/booking/client/src/components/PrivateRoute.js",[],"/Users/kaloraat/udemy/booking/client/src/components/DashboardNav.js",[],"/Users/kaloraat/udemy/booking/client/src/user/DashboardSeller.js",["128"],"import { useState, useEffect } from \"react\";\nimport DashboardNav from \"../components/DashboardNav\";\nimport ConnectNav from \"../components/ConnectNav\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { HomeOutlined } from \"@ant-design/icons\";\nimport { createConnectAccount } from \"../actions/stripe\";\nimport { sellerHotels, deleteHotel } from \"../actions/hotel\";\nimport { toast } from \"react-toastify\";\nimport SmallCard from \"../components/cards/SmallCard\";\n\nconst DashboardSeller = () => {\n  const { auth } = useSelector((state) => ({ ...state }));\n  const [hotels, setHotels] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    loadSellersHotels();\n  }, []);\n\n  const loadSellersHotels = async () => {\n    let { data } = await sellerHotels(auth.token);\n    setHotels(data);\n  };\n\n  const handleClick = async () => {\n    setLoading(true);\n    try {\n      let res = await createConnectAccount(auth.token);\n      console.log(res); // get login link\n      window.location.href = res.data;\n    } catch (err) {\n      console.log(err);\n      toast.error(\"Stripe connect failed, Try again.\");\n      setLoading(false);\n    }\n  };\n\n  const handleHotelDelete = async (hotelId) => {\n    if (!window.confirm(\"Are you sure?\")) return;\n    deleteHotel(auth.token, hotelId).then((res) => {\n      toast.success(\"Hotel Deleted\");\n      loadSellersHotels();\n    });\n  };\n\n  const connected = () => (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-md-10\">\n          <h2>Your Hotels</h2>\n        </div>\n        <div className=\"col-md-2\">\n          <Link to=\"/hotels/new\" className=\"btn btn-primary\">\n            + Add New\n          </Link>\n        </div>\n      </div>\n\n      <div className=\"row\">\n        {hotels.map((h) => (\n          <SmallCard\n            key={h._id}\n            h={h}\n            showViewMoreButton={false}\n            owner={true}\n            handleHotelDelete={handleHotelDelete}\n          />\n        ))}\n      </div>\n    </div>\n  );\n\n  const notConnected = () => (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-md-3 text-center\">\n          <div className=\"p-5 pointer\">\n            <HomeOutlined className=\"h1\" />\n            <h4>Setup payouts to post hotel rooms</h4>\n            <p className=\"lead\">\n              MERN partners with stripe to transfer earnings to your bank\n              account\n            </p>\n            <button\n              disabled={loading}\n              onClick={handleClick}\n              className=\"btn btn-primary mb-3\"\n            >\n              {loading ? \"Processing...\" : \"Setup Payouts\"}\n            </button>\n            <p className=\"text-muted\">\n              <small>\n                You'll be redirected to Stripe to complete the onboarding\n                process.\n              </small>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      <div className=\"container-fluid bg-secondary p-5\">\n        <ConnectNav />\n      </div>\n\n      <div className=\"container-fluid p-4\">\n        <DashboardNav />\n      </div>\n\n      {auth &&\n      auth.user &&\n      auth.user.stripe_seller &&\n      auth.user.stripe_seller.charges_enabled\n        ? connected()\n        : notConnected()}\n\n      {/* <pre>{JSON.stringify(auth, null, 4)}</pre> */}\n    </>\n  );\n};\n\nexport default DashboardSeller;\n","/Users/kaloraat/udemy/booking/client/src/components/ConnectNav.js",["129","130"],"import { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Card, Avatar, Badge } from \"antd\";\nimport moment from \"moment\";\nimport {\n  getAccountBalance,\n  currencyFormatter,\n  payoutSetting,\n} from \"../actions/stripe\";\nimport { SettingOutlined } from \"@ant-design/icons\";\nimport { toast } from \"react-toastify\";\n\nconst { Meta } = Card;\nconst { Ribbon } = Badge;\n\nconst ConnectNav = () => {\n  const [loading, setLoading] = useState(false);\n  const [balance, setBalance] = useState(0);\n  const { auth } = useSelector((state) => ({ ...state }));\n  const { user, token } = auth;\n\n  useEffect(() => {\n    getAccountBalance(auth.token).then((res) => {\n      // console.log(res);\n      setBalance(res.data);\n    });\n  }, []);\n\n  const handlePayoutSettings = async () => {\n    setLoading(true);\n    try {\n      const res = await payoutSetting(token);\n      // console.log(\"RES FOR PAYOUT SETTING LINK\", res);\n      window.location.href = res.data.url;\n      setLoading(false);\n    } catch (err) {\n      console.log(err);\n      setLoading(false);\n      toast(\"Unable to access settings. Try again\");\n    }\n  };\n\n  return (\n    <div className=\"d-flex justify-content-around\">\n      <Card>\n        <Meta\n          avatar={<Avatar>{user.name[0]}</Avatar>}\n          title={user.name}\n          description={`Joined ${moment(user.createdAt).fromNow()}`}\n        />\n      </Card>\n      {auth &&\n        auth.user &&\n        auth.user.stripe_seller &&\n        auth.user.stripe_seller.charges_enabled && (\n          <>\n            <Ribbon text=\"Avaliable\" color=\"grey\">\n              <Card className=\"bg-light pt-1\">\n                {balance &&\n                  balance.pending &&\n                  balance.pending.map((bp, i) => (\n                    <span key={i} className=\"lead\">\n                      {currencyFormatter(bp)}\n                    </span>\n                  ))}\n              </Card>\n            </Ribbon>\n            <Ribbon text=\"Payouts\" color=\"silver\">\n              <Card onClick={handlePayoutSettings} className=\"bg-light pointer\">\n                <SettingOutlined className=\"h5 pt-2\" />\n              </Card>\n            </Ribbon>\n          </>\n        )}\n    </div>\n  );\n};\n\nexport default ConnectNav;\n","/Users/kaloraat/udemy/booking/client/src/hotels/NewHotel.js",["131","132"],"import { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { DatePicker, Select } from \"antd\";\nimport { createHotel } from \"../actions/hotel\";\nimport { useSelector } from \"react-redux\";\nimport HotelCreateForm from \"../components/forms/HotelCreateForm\";\n\nconst { Option } = Select;\n\nconst NewHotel = () => {\n  // redux\n  const { auth } = useSelector((state) => ({ ...state }));\n  const { token } = auth;\n  // state\n  const [values, setValues] = useState({\n    title: \"\",\n    content: \"\",\n    image: \"\",\n    price: \"\",\n    from: \"\",\n    to: \"\",\n    bed: \"\",\n  });\n  const [preview, setPreview] = useState(\n    \"https://via.placeholder.com/100x100.png?text=PREVIEW\"\n  );\n  const [location, setLocation] = useState(\"\");\n  // destructuring variables from state\n  const { title, content, image, price, from, to, bed } = values;\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    // console.log(values);\n    // console.log(location);\n\n    let hotelData = new FormData();\n    hotelData.append(\"title\", title);\n    hotelData.append(\"content\", content);\n    hotelData.append(\"location\", location);\n    hotelData.append(\"price\", price);\n    image && hotelData.append(\"image\", image);\n    hotelData.append(\"from\", from);\n    hotelData.append(\"to\", to);\n    hotelData.append(\"bed\", bed);\n\n    console.log([...hotelData]);\n\n    try {\n      let res = await createHotel(token, hotelData);\n      console.log(\"HOTEL CREATE RES\", res);\n      toast.success(\"New hotel is posted\");\n      setTimeout(() => {\n        window.location.reload();\n      }, 1000);\n    } catch (err) {\n      console.log(err);\n      toast.error(err.response.data);\n    }\n  };\n\n  const handleImageChange = (e) => {\n    // console.log(e.target.files[0]);\n    setPreview(URL.createObjectURL(e.target.files[0]));\n    setValues({ ...values, image: e.target.files[0] });\n  };\n\n  const handleChange = (e) => {\n    setValues({ ...values, [e.target.name]: e.target.value });\n  };\n\n  return (\n    <>\n      <div className=\"container-fluid bg-secondary p-5 text-center\">\n        <h2>Add Hotel</h2>\n      </div>\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-10\">\n            <br />\n            <HotelCreateForm\n              values={values}\n              setValues={setValues}\n              handleChange={handleChange}\n              handleImageChange={handleImageChange}\n              handleSubmit={handleSubmit}\n              location={location}\n              setLocation={setLocation}\n            />\n          </div>\n          <div className=\"col-md-2\">\n            <img\n              src={preview}\n              alt=\"preview_image\"\n              className=\"img img-fluid m-2\"\n            />\n            <pre>{JSON.stringify(values, null, 4)}</pre>\n            {JSON.stringify(location)}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default NewHotel;\n","/Users/kaloraat/udemy/booking/client/src/actions/stripe.js",[],"/Users/kaloraat/udemy/booking/client/src/stripe/StripeCallback.js",["133"],"import { useEffect } from \"react\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getAccountStatus } from \"../actions/stripe\";\nimport { updateUserInLocalStorage } from \"../actions/auth\";\n\nconst StripeCallback = ({ history }) => {\n  const { auth } = useSelector((state) => ({ ...state }));\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (auth && auth.token) accountStatus();\n  }, [auth]);\n\n  const accountStatus = async () => {\n    try {\n      const res = await getAccountStatus(auth.token);\n      // console.log(\"USER ACCOUNT STATUS ON STRIPE CALLBACK\", res);\n      // update user in local storage\n      updateUserInLocalStorage(res.data, () => {\n        // update user in redux\n        dispatch({\n          type: \"LOGGED_IN_USER\",\n          payload: res.data,\n        });\n        // redirect user to dashboard\n        window.location.href = \"/dashboard/seller\";\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div className=\"d-flex justify-content-center p-5\">\n      <LoadingOutlined className=\"display-1 p-5 text-danger\" />\n    </div>\n  );\n};\n\nexport default StripeCallback;\n","/Users/kaloraat/udemy/booking/client/src/actions/hotel.js",[],"/Users/kaloraat/udemy/booking/client/src/components/forms/HotelCreateForm.js",[],"/Users/kaloraat/udemy/booking/client/src/components/cards/SmallCard.js",["134","135"],"import { currencyFormatter } from \"../../actions/stripe\";\nimport { diffDays } from \"../../actions/hotel\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\n\nconst SmallCard = ({\n  h,\n  handleHotelDelete = (f) => f,\n  owner = false,\n  showViewMoreButton = true,\n}) => {\n  const history = useHistory();\n  return (\n    <>\n      <div className=\"card mb-3\">\n        <div className=\"row no-gutters\">\n          <div className=\"col-md-4\">\n            {h.image && h.image.contentType ? (\n              <img\n                src={`${process.env.REACT_APP_API}/hotel/image/${h._id}`}\n                alt=\"default hotel image\"\n                className=\"card-image img img-fluid\"\n              />\n            ) : (\n              <img\n                src=\"https://via.placeholder.com/900x500.png?text=MERN+Booking\"\n                alt=\"default hotel image\"\n                className=\"card-image img img-fluid\"\n              />\n            )}\n          </div>\n          <div className=\"col-md-8\">\n            <div className=\"card-body\">\n              <h3 className=\"card-title\">\n                {h.title}{\" \"}\n                <span className=\"float-right text-primary\">\n                  {currencyFormatter({\n                    amount: h.price * 100,\n                    currency: \"usd\",\n                  })}\n                </span>{\" \"}\n              </h3>\n              <p className=\"alert alert-info\">{h.location}</p>\n              <p className=\"card-text\">{`${h.content.substring(1, 200)}...`}</p>\n              <p className=\"card-text\">\n                <span className=\"float-right text-primary\">\n                  for {diffDays(h.from, h.to)}{\" \"}\n                  {diffDays(h.from, h.to) <= 1 ? \" day\" : \" days\"}\n                </span>\n              </p>\n              <p className=\"card-text\">{h.bed} bed</p>\n              <p className=\"card-text\">\n                Available from {new Date(h.from).toLocaleDateString()}\n              </p>\n\n              <div className=\"d-flex justify-content-between h4\">\n                {showViewMoreButton && (\n                  <button\n                    onClick={() => history.push(`/hotel/${h._id}`)}\n                    className=\"btn btn-primary\"\n                  >\n                    Show more\n                  </button>\n                )}\n                {owner && (\n                  <>\n                    <Link to={`/hotel/edit/${h._id}`}>\n                      <EditOutlined className=\"text-warning\" />\n                    </Link>\n                    <DeleteOutlined\n                      onClick={() => handleHotelDelete(h._id)}\n                      className=\"text-danger\"\n                    />\n                  </>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default SmallCard;\n","/Users/kaloraat/udemy/booking/client/src/hotels/EditHotel.js",["136","137","138"],"import { useState, useEffect } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { DatePicker, Select } from \"antd\";\nimport { read, updateHotel } from \"../actions/hotel\";\nimport { useSelector } from \"react-redux\";\nimport HotelEditForm from \"../components/forms/HotelEditForm\";\n\nconst { Option } = Select;\n\nconst EditHotel = ({ match }) => {\n  // redux\n  const { auth } = useSelector((state) => ({ ...state }));\n  const { token } = auth;\n  // state\n  const [values, setValues] = useState({\n    title: \"\",\n    content: \"\",\n    location: \"\",\n    price: \"\",\n    from: \"\",\n    to: \"\",\n    bed: \"\",\n  });\n  const [image, setImage] = useState(\"\");\n  const [preview, setPreview] = useState(\n    \"https://via.placeholder.com/100x100.png?text=PREVIEW\"\n  );\n  // destructuring variables from state\n  const { title, content, price, from, to, bed, location } = values;\n\n  useEffect(() => {\n    loadSellerHotel();\n  }, []);\n\n  const loadSellerHotel = async () => {\n    let res = await read(match.params.hotelId);\n    // console.log(res);\n    setValues({ ...values, ...res.data });\n    setPreview(`${process.env.REACT_APP_API}/hotel/image/${res.data._id}`);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    let hotelData = new FormData();\n    hotelData.append(\"title\", title);\n    hotelData.append(\"content\", content);\n    hotelData.append(\"location\", location);\n    hotelData.append(\"price\", price);\n    image && hotelData.append(\"image\", image);\n    hotelData.append(\"from\", from);\n    hotelData.append(\"to\", to);\n    hotelData.append(\"bed\", bed);\n\n    try {\n      let res = await updateHotel(token, hotelData, match.params.hotelId);\n      console.log(\"HOTEL UPDATE RES\", res);\n      toast.success(`${res.data.title} is updated`);\n    } catch (err) {\n      console.log(err);\n      toast.error(err.response.data.err);\n    }\n  };\n\n  const handleImageChange = (e) => {\n    // console.log(e.target.files[0]);\n    setPreview(URL.createObjectURL(e.target.files[0]));\n    setImage(e.target.files[0]);\n  };\n\n  const handleChange = (e) => {\n    setValues({ ...values, [e.target.name]: e.target.value });\n  };\n\n  return (\n    <>\n      <div className=\"container-fluid bg-secondary p-5 text-center\">\n        <h2>Edit Hotel</h2>\n      </div>\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-10\">\n            <br />\n            <HotelEditForm\n              values={values}\n              setValues={setValues}\n              handleChange={handleChange}\n              handleImageChange={handleImageChange}\n              handleSubmit={handleSubmit}\n            />\n          </div>\n          <div className=\"col-md-2\">\n            <img\n              src={preview}\n              alt=\"preview_image\"\n              className=\"img img-fluid m-2\"\n            />\n            <pre>{JSON.stringify(values, null, 4)}</pre>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default EditHotel;\n","/Users/kaloraat/udemy/booking/client/src/components/forms/HotelEditForm.js",[],"/Users/kaloraat/udemy/booking/client/src/hotels/ViewHotel.js",["139","140"],"import React, { useState, useEffect } from \"react\";\nimport { useStore } from \"react-redux\";\nimport { read, diffDays } from \"../actions/hotel\";\nimport { getSessionId } from \"../actions/stripe\";\nimport moment from \"moment\";\nimport { useSelector } from \"react-redux\";\nimport { loadStripe } from \"@stripe/stripe-js\";\n\nconst ViewHotel = ({ match, history }) => {\n  const [hotel, setHotel] = useState({});\n  const [image, setImage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const { auth } = useSelector((state) => ({ ...state }));\n\n  useEffect(() => {\n    loadSellerHotel();\n  }, []);\n\n  const loadSellerHotel = async () => {\n    let res = await read(match.params.hotelId);\n    // console.log(res);\n    setHotel(res.data);\n    setImage(`${process.env.REACT_APP_API}/hotel/image/${res.data._id}`);\n  };\n\n  const handleClick = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    if (!auth) history.push(\"/login\");\n    // console.log(auth.token, match.params.hotelId);\n    let res = await getSessionId(auth.token, match.params.hotelId);\n    // console.log(\"get sessionid resposne\", res.data.sessionId);\n    const stripe = await loadStripe(process.env.REACT_APP_STRIPE_KEY);\n    stripe\n      .redirectToCheckout({\n        sessionId: res.data.sessionId,\n      })\n      .then((result) => console.log(result));\n  };\n\n  return (\n    <>\n      <div className=\"container-fluid bg-secondary p-5 text-center\">\n        <h1>{hotel.title}</h1>\n      </div>\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <br />\n            <img src={image} alt={hotel.title} className=\"img img-fluid m-2\" />\n          </div>\n\n          <div className=\"col-md-6\">\n            <br />\n            <b>{hotel.content}</b>\n            <p className=\"alert alert-info mt-3\">${hotel.price}</p>\n            <p className=\"card-text\">\n              <span className=\"float-right text-primary\">\n                for {diffDays(hotel.from, hotel.to)}{\" \"}\n                {diffDays(hotel.from, hotel.to) <= 1 ? \" day\" : \" days\"}\n              </span>\n            </p>\n            <p>\n              From <br />{\" \"}\n              {moment(new Date(hotel.from)).format(\"MMMM Do YYYY, h:mm:ss a\")}\n            </p>\n            <p>\n              To <br />{\" \"}\n              {moment(new Date(hotel.to)).format(\"MMMM Do YYYY, h:mm:ss a\")}\n            </p>\n            <i>Posted by {hotel.postedBy && hotel.postedBy.name}</i>\n            <br />\n            <button\n              onClick={handleClick}\n              className=\"btn btn-block btn-lg btn-primary mt-3\"\n              disabled={loading}\n            >\n              {loading\n                ? \"Loading...\"\n                : auth && auth.token\n                ? \"Book Now\"\n                : \"Login to Book\"}\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ViewHotel;\n","/Users/kaloraat/udemy/booking/client/src/stripe/StripeSuccess.js",["141","142"],"/Users/kaloraat/udemy/booking/client/src/stripe/StripeCancel.js",[],{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":3,"column":8,"nodeType":"149","messageId":"150","endLine":3,"endColumn":13},{"ruleId":"151","severity":1,"message":"152","line":32,"column":9,"nodeType":"153","endLine":32,"endColumn":67},{"ruleId":"154","severity":1,"message":"155","line":19,"column":6,"nodeType":"156","endLine":19,"endColumn":8,"suggestions":"157"},{"ruleId":"147","severity":1,"message":"158","line":17,"column":10,"nodeType":"149","messageId":"150","endLine":17,"endColumn":17},{"ruleId":"154","severity":1,"message":"159","line":27,"column":6,"nodeType":"156","endLine":27,"endColumn":8,"suggestions":"160"},{"ruleId":"147","severity":1,"message":"161","line":3,"column":10,"nodeType":"149","messageId":"150","endLine":3,"endColumn":20},{"ruleId":"147","severity":1,"message":"162","line":8,"column":9,"nodeType":"149","messageId":"150","endLine":8,"endColumn":15},{"ruleId":"154","severity":1,"message":"163","line":13,"column":6,"nodeType":"156","endLine":13,"endColumn":12,"suggestions":"164"},{"ruleId":"165","severity":1,"message":"166","line":19,"column":15,"nodeType":"153","endLine":23,"endColumn":17},{"ruleId":"165","severity":1,"message":"166","line":25,"column":15,"nodeType":"153","endLine":29,"endColumn":17},{"ruleId":"147","severity":1,"message":"161","line":3,"column":10,"nodeType":"149","messageId":"150","endLine":3,"endColumn":20},{"ruleId":"147","severity":1,"message":"162","line":8,"column":9,"nodeType":"149","messageId":"150","endLine":8,"endColumn":15},{"ruleId":"154","severity":1,"message":"167","line":33,"column":6,"nodeType":"156","endLine":33,"endColumn":8,"suggestions":"168"},{"ruleId":"147","severity":1,"message":"169","line":2,"column":10,"nodeType":"149","messageId":"150","endLine":2,"endColumn":18},{"ruleId":"154","severity":1,"message":"167","line":18,"column":6,"nodeType":"156","endLine":18,"endColumn":8,"suggestions":"170"},{"ruleId":"147","severity":1,"message":"171","line":1,"column":17,"nodeType":"149","messageId":"150","endLine":1,"endColumn":25},{"ruleId":"154","severity":1,"message":"172","line":24,"column":6,"nodeType":"156","endLine":24,"endColumn":28,"suggestions":"173"},"no-native-reassign",["174"],"no-negated-in-lhs",["175"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadSellersHotels'. Either include it or remove the dependency array.","ArrayExpression",["176"],"'loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'auth.token'. Either include it or remove the dependency array.",["177"],"'DatePicker' is defined but never used.","'Option' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'accountStatus'. Either include it or remove the dependency array.",["178"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","React Hook useEffect has a missing dependency: 'loadSellerHotel'. Either include it or remove the dependency array.",["179"],"'useStore' is defined but never used.",["180"],"'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'token'. Either include them or remove the dependency array.",["181"],"no-global-assign","no-unsafe-negation",{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"188","fix":"190"},{"desc":"191","fix":"192"},"Update the dependencies array to be: [loadSellersHotels]",{"range":"193","text":"194"},"Update the dependencies array to be: [auth.token]",{"range":"195","text":"196"},"Update the dependencies array to be: [accountStatus, auth]",{"range":"197","text":"198"},"Update the dependencies array to be: [loadSellerHotel]",{"range":"199","text":"200"},{"range":"201","text":"200"},"Update the dependencies array to be: [history, match.params.hotelId, token]",{"range":"202","text":"203"},[736,738],"[loadSellersHotels]",[752,754],"[auth.token]",[465,471],"[accountStatus, auth]",[916,918],"[loadSellerHotel]",[600,602],[717,739],"[history, match.params.hotelId, token]"]